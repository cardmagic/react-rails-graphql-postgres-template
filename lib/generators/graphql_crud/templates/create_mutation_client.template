import React from 'react'
import gql from 'graphql-tag'
import { Mutation } from 'react-apollo'
import PropTypes from 'prop-types'

const mutation = gql`
  mutation Create<%= class_name %>(<%= attributes_for_grahql.map { |attribute| "$#{attribute.name.camelcase(:lower)}: #{attribute.type.capitalize}" }.join(", ") %>) {
    create<%= class_name %>(<%= attributes_for_grahql.map { |attribute| "#{attribute.name.camelcase(:lower)}: $#{attribute.name.camelcase(:lower)}" }.join(", ") %>) {
      <%= class_name.camelcase(:lower) %> {
<%= attributes_for_grahql.map { |attribute| "        #{attribute.name.camelcase(:lower)}" }.join("\n") %>
      }
    }
  }
`

const Create<%= class_name %>Mutation = ({ children, variables, ...apolloProps }) => (
  <Mutation mutation={mutation} variables={variables} {...apolloProps}>
    {(create<%= class_name %>Mutation, mutationResults) => children({ create<%= class_name %>Mutation, mutationResults })}
  </Mutation>
)

Create<%= class_name %>Mutation.propTypes = {
  children: PropTypes.func.isRequired,
  variables: PropTypes.object,
}

export default Create<%= class_name %>Mutation
