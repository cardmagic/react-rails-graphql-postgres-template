import React from 'react'
import gql from 'graphql-tag'
import { Query } from 'react-apollo'
import PropTypes from 'prop-types'

const query = gql`
  query {
    <%= class_name.pluralize.camelcase(:lower) %> {
      id
<%= attributes.map { |attribute| "      #{attribute.name.camelcase(:lower)}" }.join("\n") %>
    }
  }
`

const GetAll<%= class_name.pluralize %>Query = ({
  children,
  fetchPolicy = 'cache-and-network',
  variables,
  ...apolloProps
}) => (
  <Query query={query} fetchPolicy={fetchPolicy} variables={variables} {...apolloProps}>
    {queryProps =>
      children({
        ...queryProps,
      })
    }
  </Query>
)

GetAll<%= class_name.pluralize %>Query.propTypes = {
  children: PropTypes.func.isRequired,
  fetchPolicy: PropTypes.string,
  variables: PropTypes.object,
}

export default GetAll<%= class_name.pluralize %>Query
